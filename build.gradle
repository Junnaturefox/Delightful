plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = "${mc_version}-${mod_version}"
group = 'net.brnbrd.delightful'
archivesBaseName = 'Delightful'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'parchment', version: "${parchment_version}-${mc_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                delightful {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                delightful {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'delightful', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/'), '--existing-mod', 'farmersdelight'
            mods {
                delightful {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url = "https://repo.spongepowered.org/repository/maven-public/"
    }
    maven {
        url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = "https://maven.blamejared.com/"
    }
    maven {
        url = "https://maven.tterrag.com/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")
    runtimeOnly fg.deobf("curse.maven:appleskin-248787:${appleskin_version}")
    runtimeOnly fg.deobf("curse.maven:configured-457570:${configured_version}")
    implementation fg.deobf("curse.maven:farmers-d-398521:${farmers_delight_version}")
    implementation fg.deobf("curse.maven:ecologics-570463:${ecologics_version}")
    implementation fg.deobf("curse.maven:farmers-respite-551453:${farmers_respite_version}")
    implementation fg.deobf("curse.maven:geckolib-388172:${geckolib_version}")
    implementation fg.deobf("curse.maven:patchouli-306770:${patchouli_version}")
    implementation fg.deobf("curse.maven:curios-309927:${curios_version}")
    implementation fg.deobf("curse.maven:ars-nouveau-401955:${ars_nouveau_version}")
    implementation fg.deobf("curse.maven:terrablender-563928:${terrablender_version}")
    implementation fg.deobf("curse.maven:corgilib-693313:${corgilib_version}")
    implementation fg.deobf("curse.maven:oh-the-biomes-youll-go-247560:${byg_version}")
    compileOnly fg.deobf("curse.maven:roots-classic-295780:${roots_version}")
    implementation fg.deobf("curse.maven:blueprint-382216:${blueprint_version}")
    implementation fg.deobf("curse.maven:neapolitan-382016:${neapolitan_version}")
    implementation fg.deobf("curse.maven:respiteful-836471:${respiteful_version}")
    compileOnly fg.deobf("com.tterrag.registrate:Registrate:${registrate_version}")
}

task updateJson {
    String ver = mod_version.toString()
    String log = "https://github.com/brnbrd/Delightful/blob/1.19.2/changelog.md"
    file('update/update.json').withWriter { w ->
        file('update/template.json').eachLine { line ->
            w << line.replace("latest_ver", ver).replace("latest_log", log) + System.getProperty("line.separator")
        }
        w.close()
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "delightful",
                "Specification-Vendor"    : "brnbrd",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${mod_version}",
                "Implementation-Vendor"   : "brnbrd",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}