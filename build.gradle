buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.ryanliptak.com/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7.+'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: "org.spongepowered.mixin"

version = "${mc_version}-${mod_version}"
group = 'net.brnbrd.delightful'
archivesBaseName = 'Delightful'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'parchment', version: "${parchment_version}-${mc_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                delightful {
                    source sourceSets.main
                }
            }
        }
        client {

        }
        server {
            args '--nogui'
        }
        data {
            workingDirectory project.file('run')
            args '--mod', 'delightful', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/'), '--existing-mod', 'farmersdelight', '--existing-mod', 'undergarden'
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = "https://maven.blamejared.com/"
    }
    maven {
        url = "https://maven.tterrag.com/"
    }
    maven { url "https://maven.ryanliptak.com/" }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation fg.deobf("curse.maven:farmers-delight-398521:${farmers_delight_version}")
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")
    implementation fg.deobf("curse.maven:jade-324717:${jade_version}")
    implementation fg.deobf("curse.maven:miners-delight-plus-689630:${miners_delight_version}")
    compileOnly fg.deobf("vazkii.botania:Botania:${botania_version}")
    compileOnly fg.deobf("curse.maven:spirit-495509:${spirit_version}")
    compileOnly fg.deobf("curse.maven:aether-255308:${aether_version}")
    compileOnly fg.deobf("curse.maven:aether-redux-867237:${aether_redux_version}")
    compileOnly fg.deobf("curse.maven:deep-aether-852465:${deep_aether_version}")
    implementation fg.deobf("curse.maven:the-undergarden-379849:${undergarden_version}")
    implementation fg.deobf("curse.maven:blueprint-382216:${blueprint_version}")
    compileOnly fg.deobf("curse.maven:neapolitan-382016:${neapolitan_version}")
    runtimeOnly fg.deobf("curse.maven:geckolib-388172:${geckolib_version}") // Crabber's Delight dependency
    implementation fg.deobf("curse.maven:crabbers-delight-892827:${crabbers_delight_version}")
    compileOnly fg.deobf("squeek.appleskin:appleskin-forge:${appleskin_version}:api")
    runtimeOnly fg.deobf("squeek.appleskin:appleskin-forge:${appleskin_version}")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "delightful",
                "Specification-Vendor"    : "brnbrd",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${mod_version}",
                "Implementation-Vendor"   : "brnbrd",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}